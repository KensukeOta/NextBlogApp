@import "tailwindcss";

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@theme {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --breakpoint-xxl: 1400px;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

:root {
  --background: #ffffff;
  --foreground: hsl(222.2 84% 4.9%);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: hsl(222.2 84% 4.9%);
    --foreground: hsl(210 40% 98%);
  }
}

/* 手動切替（Cookie→SSR、または no-flash による data-theme 付与で上書き） */
html[data-theme="light"] {
  --background: #ffffff;
  --foreground: hsl(222.2 84% 4.9%);
}
html[data-theme="dark"] {
  --background: hsl(222.2 84% 4.9%);
  --foreground: hsl(210 40% 98%);
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

.markdown-body ol {
  list-style: decimal;
}

.markdown-body ul {
  list-style: disc;
}

/* 入口：下からフェードインしつつ持ち上がる */
@keyframes toast-enter {
  from {
    opacity: 0;
    transform: translateY(100%) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
.animate-toast-enter {
  animation-name: toast-enter;
  animation-duration: 200ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  animation-fill-mode: both;
  will-change: transform, opacity;
}

/* 退出：右へスライドしつつフェードアウト（1本に統合） */
@keyframes toast-exit {
  from {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateX(100%) scale(0.98);
  }
}
.animate-toast-exit {
  animation-name: toast-exit;
  animation-duration: 200ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  animation-fill-mode: both;
  will-change: transform, opacity;
}
